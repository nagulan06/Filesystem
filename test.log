make: Nothing to be done for 'all'.
make disk0.cow
make[1]: Entering directory '/home/nagulan/Documents/hw12/starter-cow'
make[1]: 'disk0.cow' is up to date.
make[1]: Leaving directory '/home/nagulan/Documents/hw12/starter-cow'
./cowmount -s -f mnt disk0.cow
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
access(/, 0004) -> 0
+ storage_stat(/BDMV)
 ======= returning inum of -2
getattr(/BDMV) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/.xdg-volume-info)
 ======= returning inum of -2
getattr(/.xdg-volume-info) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/autorun.inf)
 ======= returning inum of -2
getattr(/autorun.inf) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/.Trash)
 ======= returning inum of -2
getattr(/.Trash) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/.Trash-1000)
 ======= returning inum of -2
getattr(/.Trash-1000) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
readdir(/) -> 0
+ storage_stat(/autorun.inf)
 ======= returning inum of -2
getattr(/autorun.inf) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
+ storage_stat(/one.txt)
 ======= returning inum of -2
getattr(/one.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 7
+ alloc_page() -> 7
+ mknod create /one.txt [100644] - #7
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7f5d894160a0
+ dirent = 'one.txt'
+ directory_put(..., one.txt, 7) -> 0
node{mode: 100644, size: 0}
mknod(/one.txt, 100644) -> 0
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 0}
getattr(/one.txt) -> (0) {mode: 100644, size: 0}
access(/one.txt, 0000) -> 0
open(/one.txt) -> 0
ioctl(/one.txt, 21505, ...) -> -1
+ writing to page: 7
 ===== File size = 11
write(/one.txt, 11 bytes, @+0) -> 11
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
getattr(/one.txt) -> (0) {mode: 100644, size: 11}
access(/one.txt, 0000) -> 0
open(/one.txt) -> 0
ioctl(/one.txt, 21505, ...) -> -1
+ storage_read(/one.txt); inode 7
node{mode: 100644, size: 11}
 + reading from page: 7; size: 4096; buf_offest: 0
read(/one.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
getattr(/one.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(fusermount -u mnt || true
/two.txt)
 ======= returning inum of -2
getattr(/two.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 8
+ alloc_page() -> 8
+ mknod create /two.txt [100644] - #8
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7f5d894160c0
+ dirent = 'two.txt'
+ directory_put(..., two.txt, 8) -> 0
node{mode: 100644, size: 0}
mknod(/two.txt, 100644) -> 0
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 0}
getattr(/two.txt) -> (0) {mode: 100644, size: 0}
access(/two.txt, 0000) -> 0
open(/two.txt) -> 0
ioctl(/two.txt, 21505, ...) -> -1
+ writing to page: 8
 ===== File size = 11
write(/two.txt, 11 bytes, @+0) -> 11
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
getattr(/two.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 224}
getattr(/) -> (0) {mode: 40755, size: 224}
access(/two.txt, 0000) -> 0
open(/two.txt) -> 0
ioctl(/two.txt, 21505, ...) -> -1
+ storage_read(/two.txt); inode 8
node{mode: 100644, size: 11}
 + reading from page: 8; size: 4096; buf_offest: 0
read(/two.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
getattr(/two.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 224}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
readdir(/) -> 0
+ storage_stat(/2k.txt)
 ======= returning inum of -2
getattr(/2k.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 9
+ alloc_page() -> 9
+ mknod create /2k.txt [100644] - #9
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7f5d894160e0
+ dirent = '2k.txt'
+ directory_put(..., 2k.txt, 9) -> 0
node{mode: 100644, size: 0}
mknod(/2k.txt, 100644) -> 0
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 0}
getattr(/2k.txt) -> (0) {mode: 100644, size: 0}
access(/2k.txt, 0000) -> 0
open(/2k.txt) -> 0
ioctl(/2k.txt, 21505, ...) -> -1
+ writing to page: 9
 ===== File size = 2001
write(/2k.txt, 2001 bytes, @+0) -> 2001
access(/2k.txt, 0000) -> 0
open(/2k.txt) -> 0
ioctl(/2k.txt, 21505, ...) -> -1
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
getattr(/2k.txt) -> (0) {mode: 100644, size: 2001}
+ storage_read(/2k.txt); inode 9
node{mode: 100644, size: 2001}
 + reading from page: 9; size: 4096; buf_offest: 0
read(/2k.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
getattr(/2k.txt) -> (0) {mode: 100644, size: 2001}
access(/2k.txt, 0000) -> 0
open(/2k.txt) -> 0
ioctl(/2k.txt, 21505, ...) -> -1
+ storage_read(/2k.txt); inode 9
node{mode: 100644, size: 2001}
 + reading from page: 9; size: 4096; buf_offest: 0
read(/2k.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
make disk0.cow
make[1]: Entering directory '/home/nagulan/Documents/hw12/starter-cow'
make[1]: 'disk0.cow' is up to date.
make[1]: Leaving directory '/home/nagulan/Documents/hw12/starter-cow'
./cowmount -s -f mnt disk0.cow
access(/, 0004) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/.Trash)
 ======= returning inum of -2
getattr(/.Trash) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/.Trash-1000)
 ======= returning inum of -2
getattr(/.Trash-1000) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/BDMV)
 ======= returning inum of -2
getattr(/BDMV) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/.xdg-volume-info)
 ======= returning inum of -2
getattr(/.xdg-volume-info) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/autorun.inf)
 ======= returning inum of -2
getattr(/autorun.inf) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/autorun.inf)
 ======= returning inum of -2
getattr(/autorun.inf) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'one.txt'
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
getattr(/one.txt) -> (0) {mode: 100644, size: 11}
access(/one.txt, 0000) -> 0
open(/one.txt) -> 0
ioctl(/one.txt, 21505, ...) -> -1
+ storage_read(/one.txt); inode 7
node{mode: 100644, size: 11}
 + reading from page: 7; size: 4096; buf_offest: 0
read(/one.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/one.txt)
+ storage_stat(/one.txt); inode 7
node{mode: 100644, size: 11}
getattr(/one.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
getattr(/two.txt) -> (0) {mode: 100644, size: 11}
access(/two.txt, 0000) -> 0
open(/two.txt) -> 0
ioctl(/two.txt, 21505, ...) -> -1
+ storage_read(/two.txt); inode 8
node{mode: 100644, size: 11}
 + reading from page: 8; size: 4096; buf_offest: 0
read(/two.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
getattr(/two.txt) -> (0) {mode: 100644, size: 11}
 + directory_delete(one.txt)
+ free_page(7)
+ free_inode(7)
unlink(/one.txt) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 224}
getattr(/) -> (0) {mode: 40755, size: 224}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 224}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'two.txt'
+ storage_stat(/two.txt)
+ storage_stat(/two.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
+ storage_stat(/abc.txt)
 ======= returning inum of -2
getattr(/abc.txt) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/abc.txt)
 ======= returning inum of -2
getattr(/abc.txt) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/abc.txt)
 ======= returning inum of -2
getattr(/abc.txt) -> (-2) {mode: 0000, size: 0}
rename(/two.txt => /abc.txt) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 224}
getattr(/) -> (0) {mode: 40755, size: 224}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 224}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: 'abc.txt'
+ storage_stat(/abc.txt)
+ storage_stat(/abc.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
readdir(/) -> 0
access(/abc.txt, 0000) -> 0
open(/abc.txt) -> 0
ioctl(/abc.txt, 21505, ...) -> -1
+ storage_stat(/abc.txt)
+ storage_stat(/abc.txt); inode 8
node{mode: 100644, size: 11}
getattr(/abc.txt) -> (0) {mode: 100644, size: 11}
+ storage_read(/abc.txt); inode 8
node{mode: 100644, size: 11}
 + reading from page: 8; size: 4096; buf_offest: 0
read(/abc.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/abc.txt)
+ storage_stat(/abc.txt); inode 8
node{mode: 100644, size: 11}
getattr(/abc.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(/def.txt)
 ======= returning inum of -2
getattr(/def.txt) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/def.txt)
 ======= returning inum of -2
getattr(/def.txt) -> (-2) {mode: 0000, size: 0}
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7fa30f8790e0
+ dirent = 'def.txt'
+ directory_put(..., def.txt, 8) -> 0
node{mode: 100644, size: 11}
link(/abc.txt => /def.txt) -> 0
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
getattr(/def.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 224}
getattr(/) -> (0) {mode: 40755, size: 224}
access(/def.txt, 0000) -> 0
open(/def.txt) -> 0
ioctl(/def.txt, 21505, ...) -> -1
+ storage_read(/def.txt); inode 8
node{mode: 100644, size: 11}
 + reading from page: 8; size: 4096; buf_offest: 0
read(/def.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
getattr(/def.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(/abc.txt)
+ storage_stat(/abc.txt); inode 8
node{mode: 100644, size: 11}
getattr(/abc.txt) -> (0) {mode: 100644, size: 11}
 + directory_delete(abc.txt)
unlink(/abc.txt) -> 0
access(/def.txt, 0000) -> 0
open(/def.txt) -> 0
ioctl(/def.txt, 21505, ...) -> -1
+ storage_read(/def.txt); inode 8
node{mode: 100644, size: 11}
 + reading from page: 8; size: 4096; buf_offest: 0
read(/def.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
getattr(/def.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(/foo)
 ======= returning inum of -2
getattr(/foo) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 16877 
 + alloc_inode() -> 7
+ alloc_page() -> 7
+ mknod create /foo [40755] - #7
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7fa30f8790e0
+ dirent = 'foo'
+ directory_put(..., foo, 7) -> 0
node{mode: 40755, size: 0}
mkdir(/foo) -> 0
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 0}
getattr(/foo) -> (0) {mode: 40755, size: 0}
+ storage_stat(/foo/abc.txt)
 ======= returning inum of -2
getattr(/foo/abc.txt) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/foo/abc.txt)
 ======= returning inum of -2
getattr(/foo/abc.txt) -> (-2) {mode: 0000, size: 0}
access(/def.txt, 0000) -> 0
open(/def.txt) -> 0
+ storage_stat(/foo/abc.txt)
 ======= returning inum of -2
getattr(/foo/abc.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 10
+ alloc_page() -> 10
+ mknod create /foo/abc.txt [100644] - #10
 ===== this is the parent dir inode num where file is put: 7
 ======= dir written at offset: 0x7fa30f87f000
+ dirent = 'abc.txt'
+ directory_put(..., abc.txt, 10) -> 0
node{mode: 100644, size: 0}
mknod(/foo/abc.txt, 100644) -> 0
+ storage_stat(/foo/abc.txt)
+ storage_stat(/foo/abc.txt); inode 10
node{mode: 100644, size: 0}
getattr(/foo/abc.txt) -> (0) {mode: 100644, size: 0}
access(/foo/abc.txt, 0000) -> 0
open(/foo/abc.txt) -> 0
+ storage_read(/def.txt); inode 8
node{mode: 100644, size: 11}
 + reading from page: 8; size: 4096; buf_offest: 0
read(/def.txt, 4096 bytes, @+0) -> 4096
+ writing to page: 10
 ===== File size = 11
write(/foo/abc.txt, 11 bytes, @+0) -> 11
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
getattr(/def.txt) -> (0) {mode: 100644, size: 11}
access(/foo/abc.txt, 0000) -> 0
open(/foo/abc.txt) -> 0
ioctl(/foo/abc.txt, 21505, ...) -> -1
+ storage_stat(/foo/abc.txt)
+ storage_stat(/foo/abc.txt); inode 10
node{mode: 100644, size: 11}
getattr(/foo/abc.txt) -> (0) {mode: 100644, size: 11}
+ storage_read(/foo/abc.txt); inode 10
node{mode: 100644, size: 11}
 + reading from page: 10; size: 4096; buf_offest: 0
read(/foo/abc.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/foo/abc.txt)
+ storage_stat(/foo/abc.txt); inode 10
node{mode: 100644, size: 11}
getattr(/foo/abc.txt) -> (0) {mode: 100644, size: 11}
+ storage_stat(/40k.txt)
 ======= returning inum of -2
getattr(/40k.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 11
+ alloc_page() -> 11
+ mknod create /40k.txt [100644] - #11
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7fa30f879100
+ dirent = '40k.txt'
+ directory_put(..., 40k.txt, 11) -> 0
node{mode: 100644, size: 0}
mknod(/40k.txt, 100644) -> 0
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 0}
getattr(/40k.txt) -> (0) {mode: 100644, size: 0}
access(/40k.txt, 0000) -> 0
open(/40k.txt) -> 0
ioctl(/40k.txt, 21505, ...) -> -1
+ writing to page: 11
 ===== File size = 4096
write(/40k.txt, 4096 bytes, @+0) -> 4096
+ alloc_page() -> 12
+ writing to page: 12, size: 4096, @offset: 0
write(/40k.txt, 4096 bytes, @+4096) -> 4096
+ alloc_page() -> 13
+ alloc_page() -> 14
+ writing to page: 14, size: 4096, @offset: 0 
write(/40k.txt, 4096 bytes, @+8192) -> 4096
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 256}
getattr(/) -> (0) {mode: 40755, size: 256}
+ alloc_page() -> 15
+ writing to page: 15, size: 4096, @offset: 0
write(/40k.txt, 4096 bytes, @+12288) -> 4096
+ alloc_page() -> 16
+ writing to page: 16, size: 4096, @offset: 0
write(/40k.txt, 4096 bytes, @+16384) -> 4096
+ alloc_page() -> 17
+ writing to page: 17, size: 4096, @offset: 0
write(/40k.txt, 4096 bytes, @+20480) -> 4096
+ alloc_page() -> 18
+ writing to page: 18, size: 4096, @offset: 0
write(/40k.txt, 4096 bytes, @+24576) -> 4096
+ alloc_page() -> 19
+ writing to page: 19, size: 4096, @offset: 0
write(/40k.txt, 4096 bytes, @+28672) -> 4096
+ alloc_page() -> 20
+ writing to page: 20, size: 4096, @offset: 0
write(/40k.txt, 4096 bytes, @+32768) -> 4096
+ alloc_page() -> 21
+ writing to page: 21, size: 3137, @offset: 0
write(/40k.txt, 3137 bytes, @+36864) -> 3137
access(/40k.txt, 0000) -> 0
open(/40k.txt) -> 0
ioctl(/40k.txt, 21505, ...) -> -1
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
getattr(/40k.txt) -> (0) {mode: 100644, size: 40001}
+ storage_read(/40k.txt); inode 11
node{mode: 100644, size: 40001}
 + reading from page: 11; size: 4096; buf_offest: 0
 + reading from page: 12; size: 4096; buf_offest: 0
 + reading from page: 14; size: 4096; buf_offest: 0
 + reading from page: 15; size: 4096; buf_offest: 0
read(/40k.txt, 16384 bytes, @+0) -> 16384
+ storage_read(/40k.txt); inode 11
node{mode: 100644, size: 40001}
 + reading from page: 16; size: 4096; buf_offest: 0
 + reading from page: 17; size: 4096; buf_offest: 0
 + reading from page: 18; size: 4096; buf_offest: 0
 + reading from page: 19; size: 4096; buf_offest: 0
 + reading from page: 20; size: 4096; buf_offest: 0
 + reading from page: 21; size: 3137; buf_offest: 0
read(/40k.txt, 24576 bytes, @+16384) -> 23617
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
getattr(/40k.txt) -> (0) {mode: 100644, size: 40001}
access(/40k.txt, 0000) -> 0
open(/40k.txt) -> 0
ioctl(/40k.txt, 21505, ...) -> -1
+ storage_read(/40k.txt); inode 11
node{mode: 100644, size: 40001}
 + reading from page: 12; size: 4096; buf_offest: 0
 + reading from page: 14; size: 4096; buf_offest: 0
 + reading from page: 15; size: 4096; buf_offest: 0
read(/40k.txt, 12288 bytes, @+4096) -> 12288
access(/, 0001) -> 0
+ storage_stat(/dir1)
 ======= returning inum of -2
getattr(/dir1) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 16877 
 + alloc_inode() -> 12
+ alloc_page() -> 22
+ mknod create /dir1 [40755] - #12
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7fa30f879120
+ dirent = 'dir1'
+ directory_put(..., dir1, 12) -> 0
node{mode: 40755, size: 0}
mkdir(/dir1) -> 0
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 0}
getattr(/dir1) -> (0) {mode: 40755, size: 0}
access(/dir1, 0001) -> 0
+ storage_stat(/dir1/dir2)
 ======= returning inum of -2
getattr(/dir1/dir2) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 16877 
 + alloc_inode() -> 13
+ alloc_page() -> 23
+ mknod create /dir1/dir2 [40755] - #13
 ===== this is the parent dir inode num where file is put: 12
 ======= dir written at offset: 0x7fa30f88e000
+ dirent = 'dir2'
+ directory_put(..., dir2, 13) -> 0
node{mode: 40755, size: 0}
mkdir(/dir1/dir2) -> 0
+ storage_stat(/dir1/dir2)
+ storage_stat(/dir1/dir2); inode 13
node{mode: 40755, size: 0}
getattr(/dir1/dir2) -> (0) {mode: 40755, size: 0}
access(/dir1/dir2, 0001) -> 0
+ storage_stat(/dir1/dir2/dir3)
 ======= returning inum of -2
getattr(/dir1/dir2/dir3) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 16877 
 + alloc_inode() -> 14
+ alloc_page() -> 24
+ mknod create /dir1/dir2/dir3 [40755] - #14
 ===== this is the parent dir inode num where file is put: 13
 ======= dir written at offset: 0x7fa30f88f000
+ dirent = 'dir3'
+ directory_put(..., dir3, 14) -> 0
node{mode: 40755, size: 0}
mkdir(/dir1/dir2/dir3) -> 0
+ storage_stat(/dir1/dir2/dir3)
+ storage_stat(/dir1/dir2/dir3); inode 14
node{mode: 40755, size: 0}
getattr(/dir1/dir2/dir3) -> (0) {mode: 40755, size: 0}
access(/dir1/dir2/dir3, 0001) -> 0
+ storage_stat(/dir1/dir2/dir3/dir4)
 ======= returning inum of -2
getattr(/dir1/dir2/dir3/dir4) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 16877 
 + alloc_inode() -> 15
+ alloc_page() -> 25
+ mknod create /dir1/dir2/dir3/dir4 [40755] - #15
 ===== this is the parent dir inode num where file is put: 14
 ======= dir written at offset: 0x7fa30f890000
+ dirent = 'dir4'
+ directory_put(..., dir4, 15) -> 0
node{mode: 40755, size: 0}
mkdir(/dir1/dir2/dir3/dir4) -> 0
+ storage_stat(/dir1/dir2/dir3/dir4)
+ storage_stat(/dir1/dir2/dir3/dir4); inode 15
node{mode: 40755, size: 0}
getattr(/dir1/dir2/dir3/dir4) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 288}
getattr(/) -> (0) {mode: 40755, size: 288}
access(/dir1/dir2/dir3/dir4, 0001) -> 0
+ storage_stat(/dir1/dir2/dir3/dir4/dir5)
 ======= returning inum of -2
getattr(/dir1/dir2/dir3/dir4/dir5) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 16877 
 + alloc_inode() -> 16
+ alloc_page() -> 26
+ mknod create /dir1/dir2/dir3/dir4/dir5 [40755] - #16
 ===== this is the parent dir inode num where file is put: 15
 ======= dir written at offset: 0x7fa30f891000
+ dirent = 'dir5'
+ directory_put(..., dir5, 16) -> 0
node{mode: 40755, size: 0}
mkdir(/dir1/dir2/dir3/dir4/dir5) -> 0
+ storage_stat(/dir1/dir2/dir3/dir4/dir5)
+ storage_stat(/dir1/dir2/dir3/dir4/dir5); inode 16
node{mode: 40755, size: 0}
getattr(/dir1/dir2/dir3/dir4/dir5) -> (0) {mode: 40755, size: 0}
+ storage_stat(/dir1/dir2/dir3/dir4/dir5/hello.txt)
 ======= returning inum of -2
getattr(/dir1/dir2/dir3/dir4/dir5/hello.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 17
+ alloc_page() -> 27
+ mknod create /dir1/dir2/dir3/dir4/dir5/hello.txt [100644] - #17
 ===== this is the parent dir inode num where file is put: 16
 ======= dir written at offset: 0x7fa30f892000
+ dirent = 'hello.txt'
+ directory_put(..., hello.txt, 17) -> 0
node{mode: 100644, size: 0}
mknod(/dir1/dir2/dir3/dir4/dir5/hello.txt, 100644) -> 0
+ storage_stat(/dir1/dir2/dir3/dir4/dir5/hello.txt)
+ storage_stat(/dir1/dir2/dir3/dir4/dir5/hello.txt); inode 17
node{mode: 100644, size: 0}
getattr(/dir1/dir2/dir3/dir4/dir5/hello.txt) -> (0) {mode: 100644, size: 0}
access(/dir1/dir2/dir3/dir4/dir5/hello.txt, 0000) -> 0
open(/dir1/dir2/dir3/dir4/dir5/hello.txt) -> 0
ioctl(/dir1/dir2/dir3/dir4/dir5/hello.txt, 21505, ...) -> -1
+ writing to page: 27
 ===== File size = 12
write(/dir1/dir2/dir3/dir4/dir5/hello.txt, 12 bytes, @+0) -> 12
access(/dir1/dir2/dir3/dir4/dir5/hello.txt, 0000) -> 0
open(/dir1/dir2/dir3/dir4/dir5/hello.txt) -> 0
ioctl(/dir1/dir2/dir3/dir4/dir5/hello.txt, 21505, ...) -> -1
+ storage_stat(/dir1/dir2/dir3/dir4/dir5/hello.txt)
+ storage_stat(/dir1/dir2/dir3/dir4/dir5/hello.txt); inode 17
node{mode: 100644, size: 12}
getattr(/dir1/dir2/dir3/dir4/dir5/hello.txt) -> (0) {mode: 100644, size: 12}
+ storage_read(/dir1/dir2/dir3/dir4/dir5/hello.txt); inode 17
node{mode: 100644, size: 12}
 + reading from page: 27; size: 4096; buf_offest: 0
read(/dir1/dir2/dir3/dir4/dir5/hello.txt, 4096 bytes, @+0) -> 4096
+ storage_stat(/dir1/dir2/dir3/dir4/dir5/hello.txt)
+ storage_stat(/dir1/dir2/dir3/dir4/dir5/hello.txt); inode 17
node{mode: 100644, size: 12}
getattr(/dir1/dir2/dir3/dir4/dir5/hello.txt) -> (0) {mode: 100644, size: 12}
+ storage_stat(/numbers)
 ======= returning inum of -2
getattr(/numbers) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 16877 
 + alloc_inode() -> 18
+ alloc_page() -> 28
+ mknod create /numbers [40755] - #18
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7fa30f879140
+ dirent = 'numbers'
+ directory_put(..., numbers, 18) -> 0
node{mode: 40755, size: 0}
mkdir(/numbers) -> 0
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 0}
getattr(/numbers) -> (0) {mode: 40755, size: 0}
+ storage_stat(/numbers/1.num)
 ======= returning inum of -2
getattr(/numbers/1.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 19
+ alloc_page() -> 29
+ mknod create /numbers/1.num [100644] - #19
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894000
+ dirent = '1.num'
+ directory_put(..., 1.num, 19) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/1.num, 100644) -> 0
+ storage_stat(/numbers/1.num)
+ storage_stat(/numbers/1.num); inode 19
node{mode: 100644, size: 0}
getattr(/numbers/1.num) -> (0) {mode: 100644, size: 0}
access(/numbers/1.num, 0000) -> 0
open(/numbers/1.num) -> 0
ioctl(/numbers/1.num, 21505, ...) -> -1
+ writing to page: 29
 ===== File size = 2
write(/numbers/1.num, 2 bytes, @+0) -> 2
+ storage_stat(/numbers/2.num)
 ======= returning inum of -2
getattr(/numbers/2.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 20
+ alloc_page() -> 30
+ mknod create /numbers/2.num [100644] - #20
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894020
+ dirent = '2.num'
+ directory_put(..., 2.num, 20) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/2.num, 100644) -> 0
+ storage_stat(/numbers/2.num)
+ storage_stat(/numbers/2.num); inode 20
node{mode: 100644, size: 0}
getattr(/numbers/2.num) -> (0) {mode: 100644, size: 0}
access(/numbers/2.num, 0000) -> 0
open(/numbers/2.num) -> 0
ioctl(/numbers/2.num, 21505, ...) -> -1
+ writing to page: 30
 ===== File size = 2
write(/numbers/2.num, 2 bytes, @+0) -> 2
+ storage_stat(/numbers/3.num)
 ======= returning inum of -2
getattr(/numbers/3.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 21
+ alloc_page() -> 31
+ mknod create /numbers/3.num [100644] - #21
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894040
+ dirent = '3.num'
+ directory_put(..., 3.num, 21) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/3.num, 100644) -> 0
+ storage_stat(/numbers/3.num)
+ storage_stat(/numbers/3.num); inode 21
node{mode: 100644, size: 0}
getattr(/numbers/3.num) -> (0) {mode: 100644, size: 0}
access(/numbers/3.num, 0000) -> 0
open(/numbers/3.num) -> 0
ioctl(/numbers/3.num, 21505, ...) -> -1
+ writing to page: 31
 ===== File size = 2
write(/numbers/3.num, 2 bytes, @+0) -> 2
+ storage_stat(/numbers/4.num)
 ======= returning inum of -2
getattr(/numbers/4.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 22
+ alloc_page() -> 32
+ mknod create /numbers/4.num [100644] - #22
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894060
+ dirent = '4.num'
+ directory_put(..., 4.num, 22) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/4.num, 100644) -> 0
+ storage_stat(/numbers/4.num)
+ storage_stat(/numbers/4.num); inode 22
node{mode: 100644, size: 0}
getattr(/numbers/4.num) -> (0) {mode: 100644, size: 0}
access(/numbers/4.num, 0000) -> 0
open(/numbers/4.num) -> 0
ioctl(/numbers/4.num, 21505, ...) -> -1
+ writing to page: 32
 ===== File size = 2
write(/numbers/4.num, 2 bytes, @+0) -> 2
+ storage_stat(/numbers/5.num)
 ======= returning inum of -2
getattr(/numbers/5.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 23
+ alloc_page() -> 33
+ mknod create /numbers/5.num [100644] - #23
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894080
+ dirent = '5.num'
+ directory_put(..., 5.num, 23) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/5.num, 100644) -> 0
+ storage_stat(/numbers/5.num)
+ storage_stat(/numbers/5.num); inode 23
node{mode: 100644, size: 0}
getattr(/numbers/5.num) -> (0) {mode: 100644, size: 0}
access(/numbers/5.num, 0000) -> 0
open(/numbers/5.num) -> 0
ioctl(/numbers/5.num, 21505, ...) -> -1
+ writing to page: 33
 ===== File size = 2
write(/numbers/5.num, 2 bytes, @+0) -> 2
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/numbers/6.num)
 ======= returning inum of -2
getattr(/numbers/6.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 24
+ alloc_page() -> 34
+ mknod create /numbers/6.num [100644] - #24
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8940a0
+ dirent = '6.num'
+ directory_put(..., 6.num, 24) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/6.num, 100644) -> 0
+ storage_stat(/numbers/6.num)
+ storage_stat(/numbers/6.num); inode 24
node{mode: 100644, size: 0}
getattr(/numbers/6.num) -> (0) {mode: 100644, size: 0}
access(/numbers/6.num, 0000) -> 0
open(/numbers/6.num) -> 0
ioctl(/numbers/6.num, 21505, ...) -> -1
+ writing to page: 34
 ===== File size = 2
write(/numbers/6.num, 2 bytes, @+0) -> 2
+ storage_stat(/numbers/7.num)
 ======= returning inum of -2
getattr(/numbers/7.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 25
+ alloc_page() -> 35
+ mknod create /numbers/7.num [100644] - #25
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8940c0
+ dirent = '7.num'
+ directory_put(..., 7.num, 25) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/7.num, 100644) -> 0
+ storage_stat(/numbers/7.num)
+ storage_stat(/numbers/7.num); inode 25
node{mode: 100644, size: 0}
getattr(/numbers/7.num) -> (0) {mode: 100644, size: 0}
access(/numbers/7.num, 0000) -> 0
open(/numbers/7.num) -> 0
ioctl(/numbers/7.num, 21505, ...) -> -1
+ writing to page: 35
 ===== File size = 2
write(/numbers/7.num, 2 bytes, @+0) -> 2
+ storage_stat(/numbers/8.num)
 ======= returning inum of -2
getattr(/numbers/8.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 26
+ alloc_page() -> 36
+ mknod create /numbers/8.num [100644] - #26
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8940e0
+ dirent = '8.num'
+ directory_put(..., 8.num, 26) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/8.num, 100644) -> 0
+ storage_stat(/numbers/8.num)
+ storage_stat(/numbers/8.num); inode 26
node{mode: 100644, size: 0}
getattr(/numbers/8.num) -> (0) {mode: 100644, size: 0}
access(/numbers/8.num, 0000) -> 0
open(/numbers/8.num) -> 0
ioctl(/numbers/8.num, 21505, ...) -> -1
+ writing to page: 36
 ===== File size = 2
write(/numbers/8.num, 2 bytes, @+0) -> 2
+ storage_stat(/numbers/9.num)
 ======= returning inum of -2
getattr(/numbers/9.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 27
+ alloc_page() -> 37
+ mknod create /numbers/9.num [100644] - #27
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894100
+ dirent = '9.num'
+ directory_put(..., 9.num, 27) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/9.num, 100644) -> 0
+ storage_stat(/numbers/9.num)
+ storage_stat(/numbers/9.num); inode 27
node{mode: 100644, size: 0}
getattr(/numbers/9.num) -> (0) {mode: 100644, size: 0}
access(/numbers/9.num, 0000) -> 0
open(/numbers/9.num) -> 0
ioctl(/numbers/9.num, 21505, ...) -> -1
+ writing to page: 37
 ===== File size = 2
write(/numbers/9.num, 2 bytes, @+0) -> 2
+ storage_stat(/numbers/10.num)
 ======= returning inum of -2
getattr(/numbers/10.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 28
+ alloc_page() -> 38
+ mknod create /numbers/10.num [100644] - #28
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894120
+ dirent = '10.num'
+ directory_put(..., 10.num, 28) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/10.num, 100644) -> 0
+ storage_stat(/numbers/10.num)
+ storage_stat(/numbers/10.num); inode 28
node{mode: 100644, size: 0}
getattr(/numbers/10.num) -> (0) {mode: 100644, size: 0}
access(/numbers/10.num, 0000) -> 0
open(/numbers/10.num) -> 0
ioctl(/numbers/10.num, 21505, ...) -> -1
+ writing to page: 38
 ===== File size = 3
write(/numbers/10.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/11.num)
 ======= returning inum of -2
getattr(/numbers/11.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 29
+ alloc_page() -> 39
+ mknod create /numbers/11.num [100644] - #29
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894140
+ dirent = '11.num'
+ directory_put(..., 11.num, 29) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/11.num, 100644) -> 0
+ storage_stat(/numbers/11.num)
+ storage_stat(/numbers/11.num); inode 29
node{mode: 100644, size: 0}
getattr(/numbers/11.num) -> (0) {mode: 100644, size: 0}
access(/numbers/11.num, 0000) -> 0
open(/numbers/11.num) -> 0
ioctl(/numbers/11.num, 21505, ...) -> -1
+ writing to page: 39
 ===== File size = 3
write(/numbers/11.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/12.num)
 ======= returning inum of -2
getattr(/numbers/12.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 30
+ alloc_page() -> 40
+ mknod create /numbers/12.num [100644] - #30
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894160
+ dirent = '12.num'
+ directory_put(..., 12.num, 30) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/12.num, 100644) -> 0
+ storage_stat(/numbers/12.num)
+ storage_stat(/numbers/12.num); inode 30
node{mode: 100644, size: 0}
getattr(/numbers/12.num) -> (0) {mode: 100644, size: 0}
access(/numbers/12.num, 0000) -> 0
open(/numbers/12.num) -> 0
ioctl(/numbers/12.num, 21505, ...) -> -1
+ writing to page: 40
 ===== File size = 3
write(/numbers/12.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/13.num)
 ======= returning inum of -2
getattr(/numbers/13.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 31
+ alloc_page() -> 41
+ mknod create /numbers/13.num [100644] - #31
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894180
+ dirent = '13.num'
+ directory_put(..., 13.num, 31) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/13.num, 100644) -> 0
+ storage_stat(/numbers/13.num)
+ storage_stat(/numbers/13.num); inode 31
node{mode: 100644, size: 0}
getattr(/numbers/13.num) -> (0) {mode: 100644, size: 0}
access(/numbers/13.num, 0000) -> 0
open(/numbers/13.num) -> 0
ioctl(/numbers/13.num, 21505, ...) -> -1
+ writing to page: 41
 ===== File size = 3
write(/numbers/13.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/14.num)
 ======= returning inum of -2
getattr(/numbers/14.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 32
+ alloc_page() -> 42
+ mknod create /numbers/14.num [100644] - #32
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8941a0
+ dirent = '14.num'
+ directory_put(..., 14.num, 32) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/14.num, 100644) -> 0
+ storage_stat(/numbers/14.num)
+ storage_stat(/numbers/14.num); inode 32
node{mode: 100644, size: 0}
getattr(/numbers/14.num) -> (0) {mode: 100644, size: 0}
access(/numbers/14.num, 0000) -> 0
open(/numbers/14.num) -> 0
ioctl(/numbers/14.num, 21505, ...) -> -1
+ writing to page: 42
 ===== File size = 3
write(/numbers/14.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/15.num)
 ======= returning inum of -2
getattr(/numbers/15.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 33
+ alloc_page() -> 43
+ mknod create /numbers/15.num [100644] - #33
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8941c0
+ dirent = '15.num'
+ directory_put(..., 15.num, 33) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/15.num, 100644) -> 0
+ storage_stat(/numbers/15.num)
+ storage_stat(/numbers/15.num); inode 33
node{mode: 100644, size: 0}
getattr(/numbers/15.num) -> (0) {mode: 100644, size: 0}
access(/numbers/15.num, 0000) -> 0
open(/numbers/15.num) -> 0
ioctl(/numbers/15.num, 21505, ...) -> -1
+ writing to page: 43
 ===== File size = 3
write(/numbers/15.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/16.num)
 ======= returning inum of -2
getattr(/numbers/16.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 34
+ alloc_page() -> 44
+ mknod create /numbers/16.num [100644] - #34
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8941e0
+ dirent = '16.num'
+ directory_put(..., 16.num, 34) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/16.num, 100644) -> 0
+ storage_stat(/numbers/16.num)
+ storage_stat(/numbers/16.num); inode 34
node{mode: 100644, size: 0}
getattr(/numbers/16.num) -> (0) {mode: 100644, size: 0}
access(/numbers/16.num, 0000) -> 0
open(/numbers/16.num) -> 0
ioctl(/numbers/16.num, 21505, ...) -> -1
+ writing to page: 44
 ===== File size = 3
write(/numbers/16.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/17.num)
 ======= returning inum of -2
getattr(/numbers/17.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 35
+ alloc_page() -> 45
+ mknod create /numbers/17.num [100644] - #35
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894200
+ dirent = '17.num'
+ directory_put(..., 17.num, 35) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/17.num, 100644) -> 0
+ storage_stat(/numbers/17.num)
+ storage_stat(/numbers/17.num); inode 35
node{mode: 100644, size: 0}
getattr(/numbers/17.num) -> (0) {mode: 100644, size: 0}
access(/numbers/17.num, 0000) -> 0
open(/numbers/17.num) -> 0
ioctl(/numbers/17.num, 21505, ...) -> -1
+ writing to page: 45
 ===== File size = 3
write(/numbers/17.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/18.num)
 ======= returning inum of -2
getattr(/numbers/18.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 36
+ alloc_page() -> 46
+ mknod create /numbers/18.num [100644] - #36
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894220
+ dirent = '18.num'
+ directory_put(..., 18.num, 36) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/18.num, 100644) -> 0
+ storage_stat(/numbers/18.num)
+ storage_stat(/numbers/18.num); inode 36
node{mode: 100644, size: 0}
getattr(/numbers/18.num) -> (0) {mode: 100644, size: 0}
access(/numbers/18.num, 0000) -> 0
open(/numbers/18.num) -> 0
ioctl(/numbers/18.num, 21505, ...) -> -1
+ writing to page: 46
 ===== File size = 3
write(/numbers/18.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/19.num)
 ======= returning inum of -2
getattr(/numbers/19.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 37
+ alloc_page() -> 47
+ mknod create /numbers/19.num [100644] - #37
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894240
+ dirent = '19.num'
+ directory_put(..., 19.num, 37) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/19.num, 100644) -> 0
+ storage_stat(/numbers/19.num)
+ storage_stat(/numbers/19.num); inode 37
node{mode: 100644, size: 0}
getattr(/numbers/19.num) -> (0) {mode: 100644, size: 0}
access(/numbers/19.num, 0000) -> 0
open(/numbers/19.num) -> 0
ioctl(/numbers/19.num, 21505, ...) -> -1
+ writing to page: 47
 ===== File size = 3
write(/numbers/19.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/20.num)
 ======= returning inum of -2
getattr(/numbers/20.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 38
+ alloc_page() -> 48
+ mknod create /numbers/20.num [100644] - #38
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894260
+ dirent = '20.num'
+ directory_put(..., 20.num, 38) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/20.num, 100644) -> 0
+ storage_stat(/numbers/20.num)
+ storage_stat(/numbers/20.num); inode 38
node{mode: 100644, size: 0}
getattr(/numbers/20.num) -> (0) {mode: 100644, size: 0}
access(/numbers/20.num, 0000) -> 0
open(/numbers/20.num) -> 0
ioctl(/numbers/20.num, 21505, ...) -> -1
+ writing to page: 48
 ===== File size = 3
write(/numbers/20.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/21.num)
 ======= returning inum of -2
getattr(/numbers/21.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 39
+ alloc_page() -> 49
+ mknod create /numbers/21.num [100644] - #39
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894280
+ dirent = '21.num'
+ directory_put(..., 21.num, 39) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/21.num, 100644) -> 0
+ storage_stat(/numbers/21.num)
+ storage_stat(/numbers/21.num); inode 39
node{mode: 100644, size: 0}
getattr(/numbers/21.num) -> (0) {mode: 100644, size: 0}
access(/numbers/21.num, 0000) -> 0
open(/numbers/21.num) -> 0
ioctl(/numbers/21.num, 21505, ...) -> -1
+ writing to page: 49
 ===== File size = 3
write(/numbers/21.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/22.num)
 ======= returning inum of -2
getattr(/numbers/22.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 40
+ alloc_page() -> 50
+ mknod create /numbers/22.num [100644] - #40
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8942a0
+ dirent = '22.num'
+ directory_put(..., 22.num, 40) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/22.num, 100644) -> 0
+ storage_stat(/numbers/22.num)
+ storage_stat(/numbers/22.num); inode 40
node{mode: 100644, size: 0}
getattr(/numbers/22.num) -> (0) {mode: 100644, size: 0}
access(/numbers/22.num, 0000) -> 0
open(/numbers/22.num) -> 0
ioctl(/numbers/22.num, 21505, ...) -> -1
+ writing to page: 50
 ===== File size = 3
write(/numbers/22.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/23.num)
 ======= returning inum of -2
getattr(/numbers/23.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 41
+ alloc_page() -> 51
+ mknod create /numbers/23.num [100644] - #41
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8942c0
+ dirent = '23.num'
+ directory_put(..., 23.num, 41) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/23.num, 100644) -> 0
+ storage_stat(/numbers/23.num)
+ storage_stat(/numbers/23.num); inode 41
node{mode: 100644, size: 0}
getattr(/numbers/23.num) -> (0) {mode: 100644, size: 0}
access(/numbers/23.num, 0000) -> 0
open(/numbers/23.num) -> 0
ioctl(/numbers/23.num, 21505, ...) -> -1
+ writing to page: 51
 ===== File size = 3
write(/numbers/23.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/24.num)
 ======= returning inum of -2
getattr(/numbers/24.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 42
+ alloc_page() -> 52
+ mknod create /numbers/24.num [100644] - #42
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8942e0
+ dirent = '24.num'
+ directory_put(..., 24.num, 42) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/24.num, 100644) -> 0
+ storage_stat(/numbers/24.num)
+ storage_stat(/numbers/24.num); inode 42
node{mode: 100644, size: 0}
getattr(/numbers/24.num) -> (0) {mode: 100644, size: 0}
access(/numbers/24.num, 0000) -> 0
open(/numbers/24.num) -> 0
ioctl(/numbers/24.num, 21505, ...) -> -1
+ writing to page: 52
 ===== File size = 3
write(/numbers/24.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/25.num)
 ======= returning inum of -2
getattr(/numbers/25.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 43
+ alloc_page() -> 53
+ mknod create /numbers/25.num [100644] - #43
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894300
+ dirent = '25.num'
+ directory_put(..., 25.num, 43) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/25.num, 100644) -> 0
+ storage_stat(/numbers/25.num)
+ storage_stat(/numbers/25.num); inode 43
node{mode: 100644, size: 0}
getattr(/numbers/25.num) -> (0) {mode: 100644, size: 0}
access(/numbers/25.num, 0000) -> 0
open(/numbers/25.num) -> 0
ioctl(/numbers/25.num, 21505, ...) -> -1
+ writing to page: 53
 ===== File size = 3
write(/numbers/25.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/26.num)
 ======= returning inum of -2
getattr(/numbers/26.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 44
+ alloc_page() -> 54
+ mknod create /numbers/26.num [100644] - #44
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894320
+ dirent = '26.num'
+ directory_put(..., 26.num, 44) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/26.num, 100644) -> 0
+ storage_stat(/numbers/26.num)
+ storage_stat(/numbers/26.num); inode 44
node{mode: 100644, size: 0}
getattr(/numbers/26.num) -> (0) {mode: 100644, size: 0}
access(/numbers/26.num, 0000) -> 0
open(/numbers/26.num) -> 0
ioctl(/numbers/26.num, 21505, ...) -> -1
+ writing to page: 54
 ===== File size = 3
write(/numbers/26.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/27.num)
 ======= returning inum of -2
getattr(/numbers/27.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 45
+ alloc_page() -> 55
+ mknod create /numbers/27.num [100644] - #45
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894340
+ dirent = '27.num'
+ directory_put(..., 27.num, 45) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/27.num, 100644) -> 0
+ storage_stat(/numbers/27.num)
+ storage_stat(/numbers/27.num); inode 45
node{mode: 100644, size: 0}
getattr(/numbers/27.num) -> (0) {mode: 100644, size: 0}
access(/numbers/27.num, 0000) -> 0
open(/numbers/27.num) -> 0
ioctl(/numbers/27.num, 21505, ...) -> -1
+ writing to page: 55
 ===== File size = 3
write(/numbers/27.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/28.num)
 ======= returning inum of -2
getattr(/numbers/28.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 46
+ alloc_page() -> 56
+ mknod create /numbers/28.num [100644] - #46
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894360
+ dirent = '28.num'
+ directory_put(..., 28.num, 46) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/28.num, 100644) -> 0
+ storage_stat(/numbers/28.num)
+ storage_stat(/numbers/28.num); inode 46
node{mode: 100644, size: 0}
getattr(/numbers/28.num) -> (0) {mode: 100644, size: 0}
access(/numbers/28.num, 0000) -> 0
open(/numbers/28.num) -> 0
ioctl(/numbers/28.num, 21505, ...) -> -1
+ writing to page: 56
 ===== File size = 3
write(/numbers/28.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/29.num)
 ======= returning inum of -2
getattr(/numbers/29.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 47
+ alloc_page() -> 57
+ mknod create /numbers/29.num [100644] - #47
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894380
+ dirent = '29.num'
+ directory_put(..., 29.num, 47) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/29.num, 100644) -> 0
+ storage_stat(/numbers/29.num)
+ storage_stat(/numbers/29.num); inode 47
node{mode: 100644, size: 0}
getattr(/numbers/29.num) -> (0) {mode: 100644, size: 0}
access(/numbers/29.num, 0000) -> 0
open(/numbers/29.num) -> 0
ioctl(/numbers/29.num, 21505, ...) -> -1
+ writing to page: 57
 ===== File size = 3
write(/numbers/29.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/30.num)
 ======= returning inum of -2
getattr(/numbers/30.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 48
+ alloc_page() -> 58
+ mknod create /numbers/30.num [100644] - #48
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8943a0
+ dirent = '30.num'
+ directory_put(..., 30.num, 48) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/30.num, 100644) -> 0
+ storage_stat(/numbers/30.num)
+ storage_stat(/numbers/30.num); inode 48
node{mode: 100644, size: 0}
getattr(/numbers/30.num) -> (0) {mode: 100644, size: 0}
access(/numbers/30.num, 0000) -> 0
open(/numbers/30.num) -> 0
ioctl(/numbers/30.num, 21505, ...) -> -1
+ writing to page: 58
 ===== File size = 3
write(/numbers/30.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/31.num)
 ======= returning inum of -2
getattr(/numbers/31.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 49
+ alloc_page() -> 59
+ mknod create /numbers/31.num [100644] - #49
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8943c0
+ dirent = '31.num'
+ directory_put(..., 31.num, 49) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/31.num, 100644) -> 0
+ storage_stat(/numbers/31.num)
+ storage_stat(/numbers/31.num); inode 49
node{mode: 100644, size: 0}
getattr(/numbers/31.num) -> (0) {mode: 100644, size: 0}
access(/numbers/31.num, 0000) -> 0
open(/numbers/31.num) -> 0
ioctl(/numbers/31.num, 21505, ...) -> -1
+ writing to page: 59
 ===== File size = 3
write(/numbers/31.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/32.num)
 ======= returning inum of -2
getattr(/numbers/32.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 50
+ alloc_page() -> 60
+ mknod create /numbers/32.num [100644] - #50
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8943e0
+ dirent = '32.num'
+ directory_put(..., 32.num, 50) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/32.num, 100644) -> 0
+ storage_stat(/numbers/32.num)
+ storage_stat(/numbers/32.num); inode 50
node{mode: 100644, size: 0}
getattr(/numbers/32.num) -> (0) {mode: 100644, size: 0}
access(/numbers/32.num, 0000) -> 0
open(/numbers/32.num) -> 0
ioctl(/numbers/32.num, 21505, ...) -> -1
+ writing to page: 60
 ===== File size = 3
write(/numbers/32.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/33.num)
 ======= returning inum of -2
getattr(/numbers/33.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 51
+ alloc_page() -> 61
+ mknod create /numbers/33.num [100644] - #51
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894400
+ dirent = '33.num'
+ directory_put(..., 33.num, 51) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/33.num, 100644) -> 0
+ storage_stat(/numbers/33.num)
+ storage_stat(/numbers/33.num); inode 51
node{mode: 100644, size: 0}
getattr(/numbers/33.num) -> (0) {mode: 100644, size: 0}
access(/numbers/33.num, 0000) -> 0
open(/numbers/33.num) -> 0
ioctl(/numbers/33.num, 21505, ...) -> -1
+ writing to page: 61
 ===== File size = 3
write(/numbers/33.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/34.num)
 ======= returning inum of -2
getattr(/numbers/34.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 52
+ alloc_page() -> 62
+ mknod create /numbers/34.num [100644] - #52
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894420
+ dirent = '34.num'
+ directory_put(..., 34.num, 52) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/34.num, 100644) -> 0
+ storage_stat(/numbers/34.num)
+ storage_stat(/numbers/34.num); inode 52
node{mode: 100644, size: 0}
getattr(/numbers/34.num) -> (0) {mode: 100644, size: 0}
access(/numbers/34.num, 0000) -> 0
open(/numbers/34.num) -> 0
ioctl(/numbers/34.num, 21505, ...) -> -1
+ writing to page: 62
 ===== File size = 3
write(/numbers/34.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/35.num)
 ======= returning inum of -2
getattr(/numbers/35.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 53
+ alloc_page() -> 63
+ mknod create /numbers/35.num [100644] - #53
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894440
+ dirent = '35.num'
+ directory_put(..., 35.num, 53) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/35.num, 100644) -> 0
+ storage_stat(/numbers/35.num)
+ storage_stat(/numbers/35.num); inode 53
node{mode: 100644, size: 0}
getattr(/numbers/35.num) -> (0) {mode: 100644, size: 0}
access(/numbers/35.num, 0000) -> 0
open(/numbers/35.num) -> 0
ioctl(/numbers/35.num, 21505, ...) -> -1
+ writing to page: 63
 ===== File size = 3
write(/numbers/35.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/36.num)
 ======= returning inum of -2
getattr(/numbers/36.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 54
+ alloc_page() -> 64
+ mknod create /numbers/36.num [100644] - #54
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894460
+ dirent = '36.num'
+ directory_put(..., 36.num, 54) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/36.num, 100644) -> 0
+ storage_stat(/numbers/36.num)
+ storage_stat(/numbers/36.num); inode 54
node{mode: 100644, size: 0}
getattr(/numbers/36.num) -> (0) {mode: 100644, size: 0}
access(/numbers/36.num, 0000) -> 0
open(/numbers/36.num) -> 0
ioctl(/numbers/36.num, 21505, ...) -> -1
+ writing to page: 64
 ===== File size = 3
write(/numbers/36.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/37.num)
 ======= returning inum of -2
getattr(/numbers/37.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 55
+ alloc_page() -> 65
+ mknod create /numbers/37.num [100644] - #55
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894480
+ dirent = '37.num'
+ directory_put(..., 37.num, 55) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/37.num, 100644) -> 0
+ storage_stat(/numbers/37.num)
+ storage_stat(/numbers/37.num); inode 55
node{mode: 100644, size: 0}
getattr(/numbers/37.num) -> (0) {mode: 100644, size: 0}
access(/numbers/37.num, 0000) -> 0
open(/numbers/37.num) -> 0
ioctl(/numbers/37.num, 21505, ...) -> -1
+ writing to page: 65
 ===== File size = 3
write(/numbers/37.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/38.num)
 ======= returning inum of -2
getattr(/numbers/38.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 56
+ alloc_page() -> 66
+ mknod create /numbers/38.num [100644] - #56
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8944a0
+ dirent = '38.num'
+ directory_put(..., 38.num, 56) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/38.num, 100644) -> 0
+ storage_stat(/numbers/38.num)
+ storage_stat(/numbers/38.num); inode 56
node{mode: 100644, size: 0}
getattr(/numbers/38.num) -> (0) {mode: 100644, size: 0}
access(/numbers/38.num, 0000) -> 0
open(/numbers/38.num) -> 0
ioctl(/numbers/38.num, 21505, ...) -> -1
+ writing to page: 66
 ===== File size = 3
write(/numbers/38.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/39.num)
 ======= returning inum of -2
getattr(/numbers/39.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 57
+ alloc_page() -> 67
+ mknod create /numbers/39.num [100644] - #57
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8944c0
+ dirent = '39.num'
+ directory_put(..., 39.num, 57) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/39.num, 100644) -> 0
+ storage_stat(/numbers/39.num)
+ storage_stat(/numbers/39.num); inode 57
node{mode: 100644, size: 0}
getattr(/numbers/39.num) -> (0) {mode: 100644, size: 0}
access(/numbers/39.num, 0000) -> 0
open(/numbers/39.num) -> 0
ioctl(/numbers/39.num, 21505, ...) -> -1
+ writing to page: 67
 ===== File size = 3
write(/numbers/39.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/40.num)
 ======= returning inum of -2
getattr(/numbers/40.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 58
+ alloc_page() -> 68
+ mknod create /numbers/40.num [100644] - #58
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8944e0
+ dirent = '40.num'
+ directory_put(..., 40.num, 58) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/40.num, 100644) -> 0
+ storage_stat(/numbers/40.num)
+ storage_stat(/numbers/40.num); inode 58
node{mode: 100644, size: 0}
getattr(/numbers/40.num) -> (0) {mode: 100644, size: 0}
access(/numbers/40.num, 0000) -> 0
open(/numbers/40.num) -> 0
ioctl(/numbers/40.num, 21505, ...) -> -1
+ writing to page: 68
 ===== File size = 3
write(/numbers/40.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/41.num)
 ======= returning inum of -2
getattr(/numbers/41.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 59
+ alloc_page() -> 69
+ mknod create /numbers/41.num [100644] - #59
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894500
+ dirent = '41.num'
+ directory_put(..., 41.num, 59) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/41.num, 100644) -> 0
+ storage_stat(/numbers/41.num)
+ storage_stat(/numbers/41.num); inode 59
node{mode: 100644, size: 0}
getattr(/numbers/41.num) -> (0) {mode: 100644, size: 0}
access(/numbers/41.num, 0000) -> 0
open(/numbers/41.num) -> 0
ioctl(/numbers/41.num, 21505, ...) -> -1
+ writing to page: 69
 ===== File size = 3
write(/numbers/41.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/42.num)
 ======= returning inum of -2
getattr(/numbers/42.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 60
+ alloc_page() -> 70
+ mknod create /numbers/42.num [100644] - #60
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894520
+ dirent = '42.num'
+ directory_put(..., 42.num, 60) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/42.num, 100644) -> 0
+ storage_stat(/numbers/42.num)
+ storage_stat(/numbers/42.num); inode 60
node{mode: 100644, size: 0}
getattr(/numbers/42.num) -> (0) {mode: 100644, size: 0}
access(/numbers/42.num, 0000) -> 0
open(/numbers/42.num) -> 0
ioctl(/numbers/42.num, 21505, ...) -> -1
+ writing to page: 70
 ===== File size = 3
write(/numbers/42.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/43.num)
 ======= returning inum of -2
getattr(/numbers/43.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 61
+ alloc_page() -> 71
+ mknod create /numbers/43.num [100644] - #61
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894540
+ dirent = '43.num'
+ directory_put(..., 43.num, 61) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/43.num, 100644) -> 0
+ storage_stat(/numbers/43.num)
+ storage_stat(/numbers/43.num); inode 61
node{mode: 100644, size: 0}
getattr(/numbers/43.num) -> (0) {mode: 100644, size: 0}
access(/numbers/43.num, 0000) -> 0
open(/numbers/43.num) -> 0
ioctl(/numbers/43.num, 21505, ...) -> -1
+ writing to page: 71
 ===== File size = 3
write(/numbers/43.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/44.num)
 ======= returning inum of -2
getattr(/numbers/44.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 62
+ alloc_page() -> 72
+ mknod create /numbers/44.num [100644] - #62
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894560
+ dirent = '44.num'
+ directory_put(..., 44.num, 62) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/44.num, 100644) -> 0
+ storage_stat(/numbers/44.num)
+ storage_stat(/numbers/44.num); inode 62
node{mode: 100644, size: 0}
getattr(/numbers/44.num) -> (0) {mode: 100644, size: 0}
access(/numbers/44.num, 0000) -> 0
open(/numbers/44.num) -> 0
ioctl(/numbers/44.num, 21505, ...) -> -1
+ writing to page: 72
 ===== File size = 3
write(/numbers/44.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/45.num)
 ======= returning inum of -2
getattr(/numbers/45.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 63
+ alloc_page() -> 73
+ mknod create /numbers/45.num [100644] - #63
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894580
+ dirent = '45.num'
+ directory_put(..., 45.num, 63) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/45.num, 100644) -> 0
+ storage_stat(/numbers/45.num)
+ storage_stat(/numbers/45.num); inode 63
node{mode: 100644, size: 0}
getattr(/numbers/45.num) -> (0) {mode: 100644, size: 0}
access(/numbers/45.num, 0000) -> 0
open(/numbers/45.num) -> 0
ioctl(/numbers/45.num, 21505, ...) -> -1
+ writing to page: 73
 ===== File size = 3
write(/numbers/45.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/46.num)
 ======= returning inum of -2
getattr(/numbers/46.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 64
+ alloc_page() -> 74
+ mknod create /numbers/46.num [100644] - #64
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8945a0
+ dirent = '46.num'
+ directory_put(..., 46.num, 64) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/46.num, 100644) -> 0
+ storage_stat(/numbers/46.num)
+ storage_stat(/numbers/46.num); inode 64
node{mode: 100644, size: 0}
getattr(/numbers/46.num) -> (0) {mode: 100644, size: 0}
access(/numbers/46.num, 0000) -> 0
open(/numbers/46.num) -> 0
ioctl(/numbers/46.num, 21505, ...) -> -1
+ writing to page: 74
 ===== File size = 3
write(/numbers/46.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/47.num)
 ======= returning inum of -2
getattr(/numbers/47.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 65
+ alloc_page() -> 75
+ mknod create /numbers/47.num [100644] - #65
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8945c0
+ dirent = '47.num'
+ directory_put(..., 47.num, 65) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/47.num, 100644) -> 0
+ storage_stat(/numbers/47.num)
+ storage_stat(/numbers/47.num); inode 65
node{mode: 100644, size: 0}
getattr(/numbers/47.num) -> (0) {mode: 100644, size: 0}
access(/numbers/47.num, 0000) -> 0
open(/numbers/47.num) -> 0
ioctl(/numbers/47.num, 21505, ...) -> -1
+ writing to page: 75
 ===== File size = 3
write(/numbers/47.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/48.num)
 ======= returning inum of -2
getattr(/numbers/48.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 66
+ alloc_page() -> 76
+ mknod create /numbers/48.num [100644] - #66
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f8945e0
+ dirent = '48.num'
+ directory_put(..., 48.num, 66) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/48.num, 100644) -> 0
+ storage_stat(/numbers/48.num)
+ storage_stat(/numbers/48.num); inode 66
node{mode: 100644, size: 0}
getattr(/numbers/48.num) -> (0) {mode: 100644, size: 0}
access(/numbers/48.num, 0000) -> 0
open(/numbers/48.num) -> 0
ioctl(/numbers/48.num, 21505, ...) -> -1
+ writing to page: 76
 ===== File size = 3
write(/numbers/48.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/49.num)
 ======= returning inum of -2
getattr(/numbers/49.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 67
+ alloc_page() -> 77
+ mknod create /numbers/49.num [100644] - #67
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894600
+ dirent = '49.num'
+ directory_put(..., 49.num, 67) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/49.num, 100644) -> 0
+ storage_stat(/numbers/49.num)
+ storage_stat(/numbers/49.num); inode 67
node{mode: 100644, size: 0}
getattr(/numbers/49.num) -> (0) {mode: 100644, size: 0}
access(/numbers/49.num, 0000) -> 0
open(/numbers/49.num) -> 0
ioctl(/numbers/49.num, 21505, ...) -> -1
+ writing to page: 77
 ===== File size = 3
write(/numbers/49.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers/50.num)
 ======= returning inum of -2
getattr(/numbers/50.num) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 68
+ alloc_page() -> 78
+ mknod create /numbers/50.num [100644] - #68
 ===== this is the parent dir inode num where file is put: 18
 ======= dir written at offset: 0x7fa30f894620
+ dirent = '50.num'
+ directory_put(..., 50.num, 68) -> 0
node{mode: 100644, size: 0}
mknod(/numbers/50.num, 100644) -> 0
+ storage_stat(/numbers/50.num)
+ storage_stat(/numbers/50.num); inode 68
node{mode: 100644, size: 0}
getattr(/numbers/50.num) -> (0) {mode: 100644, size: 0}
access(/numbers/50.num, 0000) -> 0
open(/numbers/50.num) -> 0
ioctl(/numbers/50.num, 21505, ...) -> -1
+ writing to page: 78
 ===== File size = 3
write(/numbers/50.num, 3 bytes, @+0) -> 3
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1600}
getattr(/numbers) -> (0) {mode: 40755, size: 1600}
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1600}
 ====== path to list: /numbers
+ looking at path: '1.num'
+ storage_stat(/numbers/1.num)
+ storage_stat(/numbers/1.num); inode 19
node{mode: 100644, size: 2}
+ looking at path: '2.num'
+ storage_stat(/numbers/2.num)
+ storage_stat(/numbers/2.num); inode 20
node{mode: 100644, size: 2}
+ looking at path: '3.num'
+ storage_stat(/numbers/3.num)
+ storage_stat(/numbers/3.num); inode 21
node{mode: 100644, size: 2}
+ looking at path: '4.num'
+ storage_stat(/numbers/4.num)
+ storage_stat(/numbers/4.num); inode 22
node{mode: 100644, size: 2}
+ looking at path: '5.num'
+ storage_stat(/numbers/5.num)
+ storage_stat(/numbers/5.num); inode 23
node{mode: 100644, size: 2}
+ looking at path: '6.num'
+ storage_stat(/numbers/6.num)
+ storage_stat(/numbers/6.num); inode 24
node{mode: 100644, size: 2}
+ looking at path: '7.num'
+ storage_stat(/numbers/7.num)
+ storage_stat(/numbers/7.num); inode 25
node{mode: 100644, size: 2}
+ looking at path: '8.num'
+ storage_stat(/numbers/8.num)
+ storage_stat(/numbers/8.num); inode 26
node{mode: 100644, size: 2}
+ looking at path: '9.num'
+ storage_stat(/numbers/9.num)
+ storage_stat(/numbers/9.num); inode 27
node{mode: 100644, size: 2}
+ looking at path: '10.num'
+ storage_stat(/numbers/10.num)
+ storage_stat(/numbers/10.num); inode 28
node{mode: 100644, size: 3}
+ looking at path: '11.num'
+ storage_stat(/numbers/11.num)
+ storage_stat(/numbers/11.num); inode 29
node{mode: 100644, size: 3}
+ looking at path: '12.num'
+ storage_stat(/numbers/12.num)
+ storage_stat(/numbers/12.num); inode 30
node{mode: 100644, size: 3}
+ looking at path: '13.num'
+ storage_stat(/numbers/13.num)
+ storage_stat(/numbers/13.num); inode 31
node{mode: 100644, size: 3}
+ looking at path: '14.num'
+ storage_stat(/numbers/14.num)
+ storage_stat(/numbers/14.num); inode 32
node{mode: 100644, size: 3}
+ looking at path: '15.num'
+ storage_stat(/numbers/15.num)
+ storage_stat(/numbers/15.num); inode 33
node{mode: 100644, size: 3}
+ looking at path: '16.num'
+ storage_stat(/numbers/16.num)
+ storage_stat(/numbers/16.num); inode 34
node{mode: 100644, size: 3}
+ looking at path: '17.num'
+ storage_stat(/numbers/17.num)
+ storage_stat(/numbers/17.num); inode 35
node{mode: 100644, size: 3}
+ looking at path: '18.num'
+ storage_stat(/numbers/18.num)
+ storage_stat(/numbers/18.num); inode 36
node{mode: 100644, size: 3}
+ looking at path: '19.num'
+ storage_stat(/numbers/19.num)
+ storage_stat(/numbers/19.num); inode 37
node{mode: 100644, size: 3}
+ looking at path: '20.num'
+ storage_stat(/numbers/20.num)
+ storage_stat(/numbers/20.num); inode 38
node{mode: 100644, size: 3}
+ looking at path: '21.num'
+ storage_stat(/numbers/21.num)
+ storage_stat(/numbers/21.num); inode 39
node{mode: 100644, size: 3}
+ looking at path: '22.num'
+ storage_stat(/numbers/22.num)
+ storage_stat(/numbers/22.num); inode 40
node{mode: 100644, size: 3}
+ looking at path: '23.num'
+ storage_stat(/numbers/23.num)
+ storage_stat(/numbers/23.num); inode 41
node{mode: 100644, size: 3}
+ looking at path: '24.num'
+ storage_stat(/numbers/24.num)
+ storage_stat(/numbers/24.num); inode 42
node{mode: 100644, size: 3}
+ looking at path: '25.num'
+ storage_stat(/numbers/25.num)
+ storage_stat(/numbers/25.num); inode 43
node{mode: 100644, size: 3}
+ looking at path: '26.num'
+ storage_stat(/numbers/26.num)
+ storage_stat(/numbers/26.num); inode 44
node{mode: 100644, size: 3}
+ looking at path: '27.num'
+ storage_stat(/numbers/27.num)
+ storage_stat(/numbers/27.num); inode 45
node{mode: 100644, size: 3}
+ looking at path: '28.num'
+ storage_stat(/numbers/28.num)
+ storage_stat(/numbers/28.num); inode 46
node{mode: 100644, size: 3}
+ looking at path: '29.num'
+ storage_stat(/numbers/29.num)
+ storage_stat(/numbers/29.num); inode 47
node{mode: 100644, size: 3}
+ looking at path: '30.num'
+ storage_stat(/numbers/30.num)
+ storage_stat(/numbers/30.num); inode 48
node{mode: 100644, size: 3}
+ looking at path: '31.num'
+ storage_stat(/numbers/31.num)
+ storage_stat(/numbers/31.num); inode 49
node{mode: 100644, size: 3}
+ looking at path: '32.num'
+ storage_stat(/numbers/32.num)
+ storage_stat(/numbers/32.num); inode 50
node{mode: 100644, size: 3}
+ looking at path: '33.num'
+ storage_stat(/numbers/33.num)
+ storage_stat(/numbers/33.num); inode 51
node{mode: 100644, size: 3}
+ looking at path: '34.num'
+ storage_stat(/numbers/34.num)
+ storage_stat(/numbers/34.num); inode 52
node{mode: 100644, size: 3}
+ looking at path: '35.num'
+ storage_stat(/numbers/35.num)
+ storage_stat(/numbers/35.num); inode 53
node{mode: 100644, size: 3}
+ looking at path: '36.num'
+ storage_stat(/numbers/36.num)
+ storage_stat(/numbers/36.num); inode 54
node{mode: 100644, size: 3}
+ looking at path: '37.num'
+ storage_stat(/numbers/37.num)
+ storage_stat(/numbers/37.num); inode 55
node{mode: 100644, size: 3}
+ looking at path: '38.num'
+ storage_stat(/numbers/38.num)
+ storage_stat(/numbers/38.num); inode 56
node{mode: 100644, size: 3}
+ looking at path: '39.num'
+ storage_stat(/numbers/39.num)
+ storage_stat(/numbers/39.num); inode 57
node{mode: 100644, size: 3}
+ looking at path: '40.num'
+ storage_stat(/numbers/40.num)
+ storage_stat(/numbers/40.num); inode 58
node{mode: 100644, size: 3}
+ looking at path: '41.num'
+ storage_stat(/numbers/41.num)
+ storage_stat(/numbers/41.num); inode 59
node{mode: 100644, size: 3}
+ looking at path: '42.num'
+ storage_stat(/numbers/42.num)
+ storage_stat(/numbers/42.num); inode 60
node{mode: 100644, size: 3}
+ looking at path: '43.num'
+ storage_stat(/numbers/43.num)
+ storage_stat(/numbers/43.num); inode 61
node{mode: 100644, size: 3}
+ looking at path: '44.num'
+ storage_stat(/numbers/44.num)
+ storage_stat(/numbers/44.num); inode 62
node{mode: 100644, size: 3}
+ looking at path: '45.num'
+ storage_stat(/numbers/45.num)
+ storage_stat(/numbers/45.num); inode 63
node{mode: 100644, size: 3}
+ looking at path: '46.num'
+ storage_stat(/numbers/46.num)
+ storage_stat(/numbers/46.num); inode 64
node{mode: 100644, size: 3}
+ looking at path: '47.num'
+ storage_stat(/numbers/47.num)
+ storage_stat(/numbers/47.num); inode 65
node{mode: 100644, size: 3}
+ looking at path: '48.num'
+ storage_stat(/numbers/48.num)
+ storage_stat(/numbers/48.num); inode 66
node{mode: 100644, size: 3}
+ looking at path: '49.num'
+ storage_stat(/numbers/49.num)
+ storage_stat(/numbers/49.num); inode 67
node{mode: 100644, size: 3}
+ looking at path: '50.num'
+ storage_stat(/numbers/50.num)
+ storage_stat(/numbers/50.num); inode 68
node{mode: 100644, size: 3}
readdir(/numbers) -> 0
access(/numbers/10.num, 0000) -> 0
open(/numbers/10.num) -> 0
ioctl(/numbers/10.num, 21505, ...) -> -1
+ storage_stat(/numbers/10.num)
+ storage_stat(/numbers/10.num); inode 28
node{mode: 100644, size: 3}
getattr(/numbers/10.num) -> (0) {mode: 100644, size: 3}
+ storage_read(/numbers/10.num); inode 28
node{mode: 100644, size: 3}
 + reading from page: 38; size: 4096; buf_offest: 0
read(/numbers/10.num, 4096 bytes, @+0) -> 4096
+ storage_stat(/numbers/10.num)
+ storage_stat(/numbers/10.num); inode 28
node{mode: 100644, size: 3}
getattr(/numbers/10.num) -> (0) {mode: 100644, size: 3}
access(/numbers/20.num, 0000) -> 0
open(/numbers/20.num) -> 0
ioctl(/numbers/20.num, 21505, ...) -> -1
+ storage_stat(/numbers/20.num)
+ storage_stat(/numbers/20.num); inode 38
node{mode: 100644, size: 3fusermount -u mnt || true
}
getattr(/numbers/20.num) -> (0) {mode: 100644, size: 3}
+ storage_read(/numbers/20.num); inode 38
node{mode: 100644, size: 3}
 + reading from page: 48; size: 4096; buf_offest: 0
read(/numbers/20.num, 4096 bytes, @+0) -> 4096
+ storage_stat(/numbers/20.num)
+ storage_stat(/numbers/20.num); inode 38
node{mode: 100644, size: 3}
getattr(/numbers/20.num) -> (0) {mode: 100644, size: 3}
access(/numbers/30.num, 0000) -> 0
open(/numbers/30.num) -> 0
ioctl(/numbers/30.num, 21505, ...) -> -1
+ storage_stat(/numbers/30.num)
+ storage_stat(/numbers/30.num); inode 48
node{mode: 100644, size: 3}
getattr(/numbers/30.num) -> (0) {mode: 100644, size: 3}
+ storage_read(/numbers/30.num); inode 48
node{mode: 100644, size: 3}
 + reading from page: 58; size: 4096; buf_offest: 0
read(/numbers/30.num, 4096 bytes, @+0) -> 4096
+ storage_stat(/numbers/30.num)
+ storage_stat(/numbers/30.num); inode 48
node{mode: 100644, size: 3}
getattr(/numbers/30.num) -> (0) {mode: 100644, size: 3}
access(/numbers/40.num, 0000) -> 0
open(/numbers/40.num) -> 0
ioctl(/numbers/40.num, 21505, ...) -> -1
+ storage_stat(/numbers/40.num)
+ storage_stat(/numbers/40.num); inode 58
node{mode: 100644, size: 3}
getattr(/numbers/40.num) -> (0) {mode: 100644, size: 3}
+ storage_read(/numbers/40.num); inode 58
node{mode: 100644, size: 3}
 + reading from page: 68; size: 4096; buf_offest: 0
read(/numbers/40.num, 4096 bytes, @+0) -> 4096
+ storage_stat(/numbers/40.num)
+ storage_stat(/numbers/40.num); inode 58
node{mode: 100644, size: 3}
getattr(/numbers/40.num) -> (0) {mode: 100644, size: 3}
access(/numbers/50.num, 0000) -> 0
open(/numbers/50.num) -> 0
ioctl(/numbers/50.num, 21505, ...) -> -1
+ storage_stat(/numbers/50.num)
+ storage_stat(/numbers/50.num); inode 68
node{mode: 100644, size: 3}
getattr(/numbers/50.num) -> (0) {mode: 100644, size: 3}
+ storage_read(/numbers/50.num); inode 68
node{mode: 100644, size: 3}
 + reading from page: 78; size: 4096; buf_offest: 0
read(/numbers/50.num, 4096 bytes, @+0) -> 4096
+ storage_stat(/numbers/50.num)
+ storage_stat(/numbers/50.num); inode 68
node{mode: 100644, size: 3}
getattr(/numbers/50.num) -> (0) {mode: 100644, size: 3}
+ storage_stat(/numbers/7.num)
+ storage_stat(/numbers/7.num); inode 25
node{mode: 100644, size: 2}
getattr(/numbers/7.num) -> (0) {mode: 100644, size: 2}
access(/numbers/7.num, 0002) -> 0
 + directory_delete(7.num)
+ free_page(35)
+ free_inode(25)
unlink(/numbers/7.num) -> 0
+ storage_stat(/numbers/14.num)
+ storage_stat(/numbers/14.num); inode 32
node{mode: 100644, size: 3}
getattr(/numbers/14.num) -> (0) {mode: 100644, size: 3}
access(/numbers/14.num, 0002) -> 0
 + directory_delete(14.num)
+ free_page(42)
+ free_inode(32)
unlink(/numbers/14.num) -> 0
+ storage_stat(/numbers/21.num)
+ storage_stat(/numbers/21.num); inode 39
node{mode: 100644, size: 3}
getattr(/numbers/21.num) -> (0) {mode: 100644, size: 3}
access(/numbers/21.num, 0002) -> 0
 + directory_delete(21.num)
+ free_page(49)
+ free_inode(39)
unlink(/numbers/21.num) -> 0
+ storage_stat(/numbers/28.num)
+ storage_stat(/numbers/28.num); inode 46
node{mode: 100644, size: 3}
getattr(/numbers/28.num) -> (0) {mode: 100644, size: 3}
access(/numbers/28.num, 0002) -> 0
 + directory_delete(28.num)
+ free_page(56)
+ free_inode(46)
unlink(/numbers/28.num) -> 0
make disk0.cow
make[1]: Entering directory '/home/nagulan/Documents/hw12/starter-cow'
make[1]: 'disk0.cow' is up to date.
make[1]: Leaving directory '/home/nagulan/Documents/hw12/starter-cow'
./cowmount -s -f mnt disk0.cow
+ storage_stat(/BDMV)
 ======= returning inum of -2
getattr(/BDMV) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
access(/, 0004) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/.xdg-volume-info)
 ======= returning inum of -2
getattr(/.xdg-volume-info) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/autorun.inf)
 ======= returning inum of -2
getattr(/autorun.inf) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/.Trash)
 ======= returning inum of -2
getattr(/.Trash) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/.Trash-1000)
 ======= returning inum of -2
getattr(/.Trash-1000) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
 ====== path to list: /
+ looking at path: 'x1.txt'
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 8}
+ looking at path: 'x2.txt'
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 8}
+ looking at path: 'x3.txt'
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 8}
+ looking at path: 'x4.txt'
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 8}
+ looking at path: 'x5.txt'
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 8}
+ looking at path: '2k.txt'
+ storage_stat(/2k.txt)
+ storage_stat(/2k.txt); inode 9
node{mode: 100644, size: 2001}
+ looking at path: 'def.txt'
+ storage_stat(/def.txt)
+ storage_stat(/def.txt); inode 8
node{mode: 100644, size: 11}
+ looking at path: 'foo'
+ storage_stat(/foo)
+ storage_stat(/foo); inode 7
node{mode: 40755, size: 32}
+ looking at path: '40k.txt'
+ storage_stat(/40k.txt)
+ storage_stat(/40k.txt); inode 11
node{mode: 100644, size: 40001}
+ looking at path: 'dir1'
+ storage_stat(/dir1)
+ storage_stat(/dir1); inode 12
node{mode: 40755, size: 32}
+ looking at path: 'numbers'
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
readdir(/) -> 0
+ storage_stat(/autorun.inf)
 ======= returning inum of -2
getattr(/autorun.inf) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
getattr(/numbers) -> (0) {mode: 40755, size: 1472}
+ storage_stat(/numbers)
+ storage_stat(/numbers); inode 18
node{mode: 40755, size: 1472}
 ====== path to list: /numbers
+ looking at path: '1.num'
+ storage_stat(/numbers/1.num)
+ storage_stat(/numbers/1.num); inode 19
node{mode: 100644, size: 2}
+ looking at path: '2.num'
+ storage_stat(/numbers/2.num)
+ storage_stat(/numbers/2.num); inode 20
node{mode: 100644, size: 2}
+ looking at path: '3.num'
+ storage_stat(/numbers/3.num)
+ storage_stat(/numbers/3.num); inode 21
node{mode: 100644, size: 2}
+ looking at path: '4.num'
+ storage_stat(/numbers/4.num)
+ storage_stat(/numbers/4.num); inode 22
node{mode: 100644, size: 2}
+ looking at path: '5.num'
+ storage_stat(/numbers/5.num)
+ storage_stat(/numbers/5.num); inode 23
node{mode: 100644, size: 2}
+ looking at path: '6.num'
+ storage_stat(/numbers/6.num)
+ storage_stat(/numbers/6.num); inode 24
node{mode: 100644, size: 2}
+ looking at path: '8.num'
+ storage_stat(/numbers/8.num)
+ storage_stat(/numbers/8.num); inode 26
node{mode: 100644, size: 2}
+ looking at path: '9.num'
+ storage_stat(/numbers/9.num)
+ storage_stat(/numbers/9.num); inode 27
node{mode: 100644, size: 2}
+ looking at path: '10.num'
+ storage_stat(/numbers/10.num)
+ storage_stat(/numbers/10.num); inode 28
node{mode: 100644, size: 3}
+ looking at path: '11.num'
+ storage_stat(/numbers/11.num)
+ storage_stat(/numbers/11.num); inode 29
node{mode: 100644, size: 3}
+ looking at path: '12.num'
+ storage_stat(/numbers/12.num)
+ storage_stat(/numbers/12.num); inode 30
node{mode: 100644, size: 3}
+ looking at path: '13.num'
+ storage_stat(/numbers/13.num)
+ storage_stat(/numbers/13.num); inode 31
node{mode: 100644, size: 3}
+ looking at path: '15.num'
+ storage_stat(/numbers/15.num)
+ storage_stat(/numbers/15.num); inode 33
node{mode: 100644, size: 3}
+ looking at path: '16.num'
+ storage_stat(/numbers/16.num)
+ storage_stat(/numbers/16.num); inode 34
node{mode: 100644, size: 3}
+ looking at path: '17.num'
+ storage_stat(/numbers/17.num)
+ storage_stat(/numbers/17.num); inode 35
node{mode: 100644, size: 3}
+ looking at path: '18.num'
+ storage_stat(/numbers/18.num)
+ storage_stat(/numbers/18.num); inode 36
node{mode: 100644, size: 3}
+ looking at path: '19.num'
+ storage_stat(/numbers/19.num)
+ storage_stat(/numbers/19.num); inode 37
node{mode: 100644, size: 3}
+ looking at path: '20.num'
+ storage_stat(/numbers/20.num)
+ storage_stat(/numbers/20.num); inode 38
node{mode: 100644, size: 3}
+ looking at path: '22.num'
+ storage_stat(/numbers/22.num)
+ storage_stat(/numbers/22.num); inode 40
node{mode: 100644, size: 3}
+ looking at path: '23.num'
+ storage_stat(/numbers/23.num)
+ storage_stat(/numbers/23.num); inode 41
node{mode: 100644, size: 3}
+ looking at path: '24.num'
+ storage_stat(/numbers/24.num)
+ storage_stat(/numbers/24.num); inode 42
node{mode: 100644, size: 3}
+ looking at path: '25.num'
+ storage_stat(/numbers/25.num)
+ storage_stat(/numbers/25.num); inode 43
node{mode: 100644, size: 3}
+ looking at path: '26.num'
+ storage_stat(/numbers/26.num)
+ storage_stat(/numbers/26.num); inode 44
node{mode: 100644, size: 3}
+ looking at path: '27.num'
+ storage_stat(/numbers/27.num)
+ storage_stat(/numbers/27.num); inode 45
node{mode: 100644, size: 3}
+ looking at path: '29.num'
+ storage_stat(/numbers/29.num)
+ storage_stat(/numbers/29.num); inode 47
node{mode: 100644, size: 3}
+ looking at path: '30.num'
+ storage_stat(/numbers/30.num)
+ storage_stat(/numbers/30.num); inode 48
node{mode: 100644, size: 3}
+ looking at path: '31.num'
+ storage_stat(/numbers/31.num)
+ storage_stat(/numbers/31.num); inode 49
node{mode: 100644, size: 3}
+ looking at path: '32.num'
+ storage_stat(/numbers/32.num)
+ storage_stat(/numbers/32.num); inode 50
node{mode: 100644, size: 3}
+ looking at path: '33.num'
+ storage_stat(/numbers/33.num)
+ storage_stat(/numbers/33.num); inode 51
node{mode: 100644, size: 3}
+ looking at path: '34.num'
+ storage_stat(/numbers/34.num)
+ storage_stat(/numbers/34.num); inode 52
node{mode: 100644, size: 3}
+ looking at path: '35.num'
+ storage_stat(/numbers/35.num)
+ storage_stat(/numbers/35.num); inode 53
node{mode: 100644, size: 3}
+ looking at path: '36.num'
+ storage_stat(/numbers/36.num)
+ storage_stat(/numbers/36.num); inode 54
node{mode: 100644, size: 3}
+ looking at path: '37.num'
+ storage_stat(/numbers/37.num)
+ storage_stat(/numbers/37.num); inode 55
node{mode: 100644, size: 3}
+ looking at path: '38.num'
+ storage_stat(/numbers/38.num)
+ storage_stat(/numbers/38.num); inode 56
node{mode: 100644, size: 3}
+ looking at path: '39.num'
+ storage_stat(/numbers/39.num)
+ storage_stat(/numbers/39.num); inode 57
node{mode: 100644, size: 3}
+ looking at path: '40.num'
+ storage_stat(/numbers/40.num)
+ storage_stat(/numbers/40.num); inode 58
node{mode: 100644, size: 3}
+ looking at path: '41.num'
+ storage_stat(/numbers/41.num)
+ storage_stat(/numbers/41.num); inode 59
node{mode: 100644, size: 3}
+ looking at path: '42.num'
+ storage_stat(/numbers/42.num)
+ storage_stat(/numbers/42.num); inode 60
node{mode: 100644, size: 3}
+ looking at path: '43.num'
+ storage_stat(/numbers/43.num)
+ storage_stat(/numbers/43.num); inode 61
node{mode: 100644, size: 3}
+ looking at path: '44.num'
+ storage_stat(/numbers/44.num)
+ storage_stat(/numbers/44.num); inode 62
node{mode: 100644, size: 3}
+ looking at path: '45.num'
+ storage_stat(/numbers/45.num)
+ storage_stat(/numbers/fusermount -u mnt || true
45.num); inode 63
node{mode: 100644, size: 3}
+ looking at path: '46.num'
+ storage_stat(/numbers/46.num)
+ storage_stat(/numbers/46.num); inode 64
node{mode: 100644, size: 3}
+ looking at path: '47.num'
+ storage_stat(/numbers/47.num)
+ storage_stat(/numbers/47.num); inode 65
node{mode: 100644, size: 3}
+ looking at path: '48.num'
+ storage_stat(/numbers/48.num)
+ storage_stat(/numbers/48.num); inode 66
node{mode: 100644, size: 3}
+ looking at path: '49.num'
+ storage_stat(/numbers/49.num)
+ storage_stat(/numbers/49.num); inode 67
node{mode: 100644, size: 3}
+ looking at path: '50.num'
+ storage_stat(/numbers/50.num)
+ storage_stat(/numbers/50.num); inode 68
node{mode: 100644, size: 3}
readdir(/numbers) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 320}
getattr(/) -> (0) {mode: 40755, size: 320}
make disk0.cow
make[1]: Entering directory '/home/nagulan/Documents/hw12/starter-cow'
mkdir -p mnt || true
if [ ! -e disk0.cow ]; then ./cowtool new disk0.cow; fi
Created disk image: disk0.cow
make[1]: Leaving directory '/home/nagulan/Documents/hw12/starter-cow'
./cowmount -s -f mnt disk0.cow
+ storage_stat(/BDMV)
 ======= returning inum of -2
getattr(/BDMV) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
access(/, 0004) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/.xdg-volume-info)
 ======= returning inum of -2
getattr(/.xdg-volume-info) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/autorun.inf)
 ======= returning inum of -2
getattr(/autorun.inf) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/.Trash)
 ======= returning inum of -2
getattr(/.Trash) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/.Trash-1000)
 ======= returning inum of -2
getattr(/.Trash-1000) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
getattr(/) -> (0) {mode: 40755, size: 0}
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 0}
 ====== path to list: /
readdir(/) -> 0
+ storage_stat(/autorun.inf)
 ======= returning inum of -2
getattr(/autorun.inf) -> (-2) {mode: 0000, size: 0}
+ storage_stat(/x1.txt)
 ======= returning inum of -2
getattr(/x1.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 2
+ alloc_page() -> 2
+ mknod create /x1.txt [100644] - #2
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7f56b3ac2000
+ dirent = 'x1.txt'
+ directory_put(..., x1.txt, 2) -> 0
node{mode: 100644, size: 0}
mknod(/x1.txt, 100644) -> 0
+ storage_stat(/x1.txt)
+ storage_stat(/x1.txt); inode 2
node{mode: 100644, size: 0}
getattr(/x1.txt) -> (0) {mode: 100644, size: 0}
access(/x1.txt, 0000) -> 0
open(/x1.txt) -> 0
ioctl(/x1.txt, 21505, ...) -> -1
+ writing to page: 2
 ===== File size = 8
write(/x1.txt, 8 bytes, @+0) -> 8
+ storage_stat(/x2.txt)
 ======= returning inum of -2
getattr(/x2.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 3
+ alloc_page() -> 3
+ mknod create /x2.txt [100644] - #3
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7f56b3ac2020
+ dirent = 'x2.txt'
+ directory_put(..., x2.txt, 3) -> 0
node{mode: 100644, size: 0}
mknod(/x2.txt, 100644) -> 0
+ storage_stat(/x2.txt)
+ storage_stat(/x2.txt); inode 3
node{mode: 100644, size: 0}
getattr(/x2.txt) -> (0) {mode: 100644, size: 0}
access(/x2.txt, 0000) -> 0
open(/x2.txt) -> 0
ioctl(/x2.txt, 21505, ...) -> -1
+ writing to page: 3
 ===== File size = 8
write(/x2.txt, 8 bytes, @+0) -> 8
+ storage_stat(/x3.txt)
 ======= returning inum of -2
getattr(/x3.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 4
+ alloc_page() -> 4
+ mknod create /x3.txt [100644] - #4
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7f56b3ac2040
+ dirent = 'x3.txt'
+ directory_put(..., x3.txt, 4) -> 0
node{mode: 100644, size: 0}
mknod(/x3.txt, 100644) -> 0
+ storage_stat(/x3.txt)
+ storage_stat(/x3.txt); inode 4
node{mode: 100644, size: 0}
getattr(/x3.txt) -> (0) {mode: 100644, size: 0}
access(/x3.txt, 0000) -> 0
open(/x3.txt) -> 0
ioctl(/x3.txt, 21505, ...) -> -1
+ writing to page: 4
 ===== fusermount -u mnt || true
File size = 8
write(/x3.txt, 8 bytes, @+0) -> 8
+ storage_stat(/x4.txt)
 ======= returning inum of -2
getattr(/x4.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 5
+ alloc_page() -> 5
+ mknod create /x4.txt [100644] - #5
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7f56b3ac2060
+ dirent = 'x4.txt'
+ directory_put(..., x4.txt, 5) -> 0
node{mode: 100644, size: 0}
mknod(/x4.txt, 100644) -> 0
+ storage_stat(/x4.txt)
+ storage_stat(/x4.txt); inode 5
node{mode: 100644, size: 0}
getattr(/x4.txt) -> (0) {mode: 100644, size: 0}
access(/x4.txt, 0000) -> 0
open(/x4.txt) -> 0
ioctl(/x4.txt, 21505, ...) -> -1
+ writing to page: 5
 ===== File size = 8
write(/x4.txt, 8 bytes, @+0) -> 8
+ storage_stat(/x5.txt)
 ======= returning inum of -2
getattr(/x5.txt) -> (-2) {mode: 0000, size: 0}
++++++ file check: mode = 33188 
 + alloc_inode() -> 6
+ alloc_page() -> 6
+ mknod create /x5.txt [100644] - #6
 ===== this is the parent dir inode num where file is put: 1
 ======= dir written at offset: 0x7f56b3ac2080
+ dirent = 'x5.txt'
+ directory_put(..., x5.txt, 6) -> 0
node{mode: 100644, size: 0}
mknod(/x5.txt, 100644) -> 0
+ storage_stat(/x5.txt)
+ storage_stat(/x5.txt); inode 6
node{mode: 100644, size: 0}
getattr(/x5.txt) -> (0) {mode: 100644, size: 0}
access(/x5.txt, 0000) -> 0
open(/x5.txt) -> 0
ioctl(/x5.txt, 21505, ...) -> -1
+ writing to page: 6
 ===== File size = 8
write(/x5.txt, 8 bytes, @+0) -> 8
+ storage_stat(/)
+ storage_stat(/); inode 1
node{mode: 40755, size: 160}
getattr(/) -> (0) {mode: 40755, size: 160}
